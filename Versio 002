	/*
	Name:		Heratysvalo_kosketusnaytto.ino
	Created:	11/11/2016 10:12:11 AM
	*/

// INCLUDET
#define DisplaySerial Serial // Using Hardware Serial
#include "Picaso_Serial_4DLib.h"
#include "Picaso_Const4D.h"
Picaso_Serial_4DLib Display(&DisplaySerial);

// ALKUMÄÄRITYKSET
/// Määritetään viikonpäivät
String sun = "    Maanantai   ";
String mon = "     Tiistai    ";
String tue = "   Keskiviikko  ";
String wed = "     Torstai    ";
String thu = "    Perjantai   ";
String fri = "    Lauantai    ";
String sat = "    Sunnuntai   ";
/// Valikkojen määritykset
int menu = 1;
int select = 1;
/// Ajan muuttujat
int timer1_counter;
int day;
int hour = 0;
int minute = 0;
long second = 0;
/// Hälytyksen muuttujat
int alarm_hour = 0;
int alarm_minute = 0;
/// Muita muuttujia
int canpress = 1;
int update_inverval = 0;
long cnt = 0;
long lastCnt = 0;
/// Piirtämiseen liittyviä
int colourvalue; // HEXANA
char tempstring[256] = { 0 }; // Temporary String Variable for putstr


// TULOSTAMINEN
/// Päivien tulostaminen
/*
void printDay(int days) {

	lcd.setCursor(0, 0);

	switch (days)
	{
	case 0:
		lcd.print(sun);
		break;

	case 1:
		lcd.print(mon);
		break;

	case 2:
		lcd.print(tue);
		break;

	case 3:
		lcd.print(wed);
		break;

	case 4:
		lcd.print(thu);
		break;

	case 5:
		lcd.print(fri);
		break;

	case 6:
		lcd.print(sat);
		break;
	}

}		///Päivien tulostaminen
		/// Tuntien tulostaminen
void printHour(int hr) {
	lcd.setCursor(0, 1);

	if (hr < 10) {
		lcd.print("0");
		lcd.print(hr);
	}
	else
		lcd.print(hr);

	lcd.print(":");

}			///Päivien tulostaminen
			/// Minuuttien tulostaminen
void printMin(int mi) {
	lcd.setCursor(3, 1);

	if (mi < 10) {
		lcd.print("0");
		lcd.print(mi);
	}
	else
		lcd.print(mi);

	lcd.print(":");

}
/// Sekunttien tulostaminen
void printSec(int se) {
	lcd.setCursor(6, 1);

	if (se < 10) {
		lcd.print("0");
		lcd.print(se);
	}
	else
		lcd.print(se);

}
*/

// AJAN TOIMINTA
void countTime() {

	if (minute == 60) {
		hour = hour + 1;
		minute = 0;
	}

	if (hour == 0) {
	}

}

/// Päivän hakeminen
int getDay(long sec) {
	int days;
	days = sec / 86400;

	return days;
}
/// Tunnin hakeminen
long getHour(long sec) {
	long mod;
	long hour;
	mod = sec % 86400;

	hour = mod / 3600;

	return hour;
}
/// Minuuttien hakeminen
long getMin(long sec) {
	long mod;
	long hour;
	long minu;

	mod = sec % 86400;

	hour = mod % 3600;
	minu = hour / 60;
	return minu;
}
/// Sekunttien hakeminen
long getSec(long sec) {
	return sec % 60;
}

/// Päivän kasvattaminen
void day_increment() {
	long buff;
	buff = second;
	if (buff>86400) buff = buff % 86400;
	noInterrupts();
	if (second>518399)
		second = buff;
	else second = second + 86400;
	//delay(300);
	interrupts();
}
/// Tuntien kasvattaminen
void hour_increment() {
	long buff;
	buff = second;
	if (buff>86400) buff = buff % 86400;
	noInterrupts();
	if (second>518399)
		second = buff;
	else second = second + 3600;
	//delay(300);
	interrupts();
}
/// Minuuttien kasvattaminen
void minute_increment() {
	long buff;
	buff = second;
	if (buff>86400) buff = buff % 86400;
	noInterrupts();
	if (second>518399)
		second = buff;
	else second = second + 60;

	second = second / 60;
	second = second * 60;

	//delay(300);
	interrupts();
}

/// Päivän vähentäminen
void day_decrement() {
	if (second >= 86400) {
		long buff;
		buff = second;
		if (buff > 86400) buff = buff % 86400;
		noInterrupts();
		if (second > 518399)
			second = buff;
		else second = second - 86400;
		//delay(300);
		interrupts();
	}
}
/// Tuntien vähentäminen
void hour_decrement() {
	if (second >= 3600) {
		long buff;
		buff = second;
		if (buff > 86400) buff = buff % 86400;
		noInterrupts();
		if (second > 518399)
			second = buff;
		else second = second - 3600;
		//delay(300);
		interrupts();
	}
}
/// Minuuttien vähentäminen
void minute_decrement() {
	if (second >= 60) {
		long buff;
		buff = second;
		if (buff > 86400) buff = buff % 86400;
		noInterrupts();
		if (second > 518399)
			second = buff;
		else second = second - 60;

		second = second / 60;
		second = second * 60;

		//delay(300);
		interrupts();
	}
}

// SETUP
void setup() {
	///Ajastimen määritykset
	noInterrupts();           // disable all interrupts
	TCCR1A = 0;
	TCCR1B = 0;

	timer1_counter = 3036;
	TCNT1 = timer1_counter;   // preload timer
	TCCR1B |= (1 << CS12);    // 256 prescaler 
	TIMSK1 |= (1 << TOIE1);   // enable timer overflow interrupt
	interrupts();             // enable all interrupts

	/// Näytön määritykset
	pinMode(4, OUTPUT);  // Set D4 on Arduino to Output (4D Arduino Adaptor V2 - Display Reset)
	digitalWrite(4, 1);  // Reset the Display via D4
	delay(100);
	digitalWrite(4, 0);  // unReset the Display via D4  
	delay(3500); //let the display start up

	DisplaySerial.begin(9600); // Using default 9600 baud rate
	Display.TimeLimit4D = 5000; // 5 second timeout on all commands  
	Display.gfx_BGcolour(BLACK); // Make it text on white background
	Display.txt_BGcolour(BLACK);
	Display.gfx_ScreenMode(4); // Landscape, microSD Card Facing Up  
	Display.gfx_Cls(); // Clear Screen
}

// AJASTIN
/// interrupt service routine 
ISR(TIMER1_OVF_vect)
{
	TCNT1 = timer1_counter;   // preload timer
	second = second + 1;
}

/// *********************** ///
//		  PÄÄLOOPPI         //
/// ********************** ///
void loop() {

	//Piirtäminen
	colourvalue = 0xFFE0;

	/// Painikkeiden reunat
	Display.gfx_Rectangle(1, 1, 62, 24, colourvalue);
	Display.gfx_Rectangle(65, 1, 126, 24, colourvalue);
	Display.gfx_Rectangle(129, 1, 190, 24, colourvalue);
	Display.gfx_Rectangle(193, 1, 254, 24, colourvalue);
	Display.gfx_Rectangle(257, 1, 318, 24, colourvalue);

	/// Fontin väri
	Display.txt_FGcolour(colourvalue);

	Display.gfx_MoveTo(16, 7);
	sprintf(tempstring, "MAIN", colourvalue);
	Display.putstr(tempstring);
	Display.gfx_MoveTo(76, 7);
	sprintf(tempstring, "ALARM", colourvalue);
	Display.putstr(tempstring);
	Display.gfx_MoveTo(144, 7);
	sprintf(tempstring, "TIME", colourvalue);
	Display.putstr(tempstring);
	Display.gfx_MoveTo(212, 7);
	sprintf(tempstring, "LED", colourvalue);
	Display.putstr(tempstring);
	Display.gfx_MoveTo(269, 7);
	sprintf(tempstring, "AUDIO", colourvalue);
	Display.putstr(tempstring);

	/// Jos sekunnit menevät yli 604799 (=Yksi viikko) niin nollataan ne
	if (second > 604799) { second = 0; }
	cnt = cnt + 1;

}
